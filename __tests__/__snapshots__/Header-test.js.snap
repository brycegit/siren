// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Creates changeview action for Inbox 1`] = `
Object {
  "payload": "Inbox",
  "type": "CHANGE_VIEW",
}
`;

exports[`Creates changeview action for Playlist 1`] = `
Object {
  "payload": "Playlist",
  "type": "CHANGE_VIEW",
}
`;

exports[`reducer changes state and renders correctly 1`] = `
Object {
  "view": "Filter",
}
`;

exports[`reducer returns default state and renders correctly 1`] = `
Object {
  "view": "Inbox",
}
`;

exports[`renders correctly 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "marginTop": 20,
        "padding": 10,
        "textAlign": "center",
      }
    }
  >
    Inbox
  </Text>
  <View
    style={
      Object {
        "alignSelf": "stretch",
        "backgroundColor": "#cccccc",
        "flexDirection": "row",
        "justifyContent": "space-around",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
    <View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        transparent={true}
        visible={false}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgba(0, 0, 0, 0.5)",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#fff",
                "padding": 20,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "space-between",
                    "width": 400,
                  }
                }
              >
                <ScrollView
                  style={
                    Object {
                      "height": "90%",
                      "marginBottom": 10,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": 250,
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                    <View
                      style={
                        Object {
                          "justifyContent": "center",
                          "width": 200,
                        }
                      }
                    >
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "All",
                              "textColor": undefined,
                              "value": "likedOff",
                            },
                            Object {
                              "label": "Liked",
                              "textColor": undefined,
                              "value": "liked",
                            },
                            Object {
                              "label": "Not Liked",
                              "textColor": undefined,
                              "value": "notLiked",
                            },
                          ]
                        }
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            Object {
                              "fontSize": 10,
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": 250,
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                    <View
                      style={
                        Object {
                          "justifyContent": "center",
                          "width": 200,
                        }
                      }
                    >
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "All",
                              "textColor": undefined,
                              "value": "bookmarkedOff",
                            },
                            Object {
                              "label": "Bookmarked",
                              "textColor": undefined,
                              "value": "bookmarked",
                            },
                            Object {
                              "label": "Not Bookmarked",
                              "textColor": undefined,
                              "value": "notBookmarked",
                            },
                          ]
                        }
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": 250,
                      }
                    }
                  >
                    <Image
                      source={1}
                      style={
                        Object {
                          "height": 28,
                          "width": 28,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "justifyContent": "center",
                          "width": 200,
                        }
                      }
                    >
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "All",
                              "textColor": undefined,
                              "value": "timeOff",
                            },
                            Object {
                              "label": "< 5 min",
                              "textColor": undefined,
                              "value": "5",
                            },
                            Object {
                              "label": "< 15 min",
                              "textColor": undefined,
                              "value": "15",
                            },
                            Object {
                              "label": "< 30 min",
                              "textColor": undefined,
                              "value": "30",
                            },
                            Object {
                              "label": "< 45 min",
                              "textColor": undefined,
                              "value": "45",
                            },
                            Object {
                              "label": "< 60 min",
                              "textColor": undefined,
                              "value": "60",
                            },
                            Object {
                              "label": "> 60 min",
                              "textColor": undefined,
                              "value": "60+",
                            },
                          ]
                        }
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "width": 250,
                      }
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                    <View
                      style={
                        Object {
                          "justifyContent": "center",
                          "width": 200,
                        }
                      }
                    >
                      <RCTPicker
                        items={
                          Array [
                            Object {
                              "label": "All",
                              "textColor": undefined,
                              "value": "All",
                            },
                            Object {
                              "label": "Tech News",
                              "textColor": undefined,
                              "value": "Tech News",
                            },
                            Object {
                              "label": "Science",
                              "textColor": undefined,
                              "value": "Science",
                            },
                            Object {
                              "label": "Technology",
                              "textColor": undefined,
                              "value": "Technology",
                            },
                          ]
                        }
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        selectedIndex={0}
                        style={
                          Array [
                            Object {
                              "height": 216,
                            },
                            undefined,
                          ]
                        }
                      />
                    </View>
                  </View>
                </ScrollView>
                <View
                  style={Object {}}
                >
                  <View
                    accessibilityComponentType="button"
                    accessibilityLabel={undefined}
                    accessibilityTraits={
                      Array [
                        "button",
                      ]
                    }
                    accessible={true}
                    hitSlop={undefined}
                    isTVSelectable={true}
                    onLayout={undefined}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID={undefined}
                    tvParallaxProperties={undefined}
                  >
                    <View
                      style={
                        Array [
                          Object {},
                        ]
                      }
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        style={
                          Array [
                            Object {
                              "color": "#0C42FD",
                              "fontSize": 18,
                              "padding": 8,
                              "textAlign": "center",
                            },
                            Object {
                              "color": "grey",
                            },
                          ]
                        }
                      >
                        Filter
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
</View>
`;
